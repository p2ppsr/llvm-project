# Autogenerated from /Users/tyeverett/projects/llvm-project/lld/test/lit.site.cfg.py.in
# Do not edit!

# Allow generated file to be relocatable.
import os
import platform
def path(p):
    if not p: return ''
    # Follows lit.util.abs_path_preserve_drive, which cannot be imported here.
    if platform.system() == 'Windows':
        return os.path.abspath(os.path.join(os.path.dirname(__file__), p))
    else:
        return os.path.realpath(os.path.join(os.path.dirname(__file__), p))


import lit.util

config.have_dia_sdk = lit.util.pythonize_bool("0")
config.llvm_src_root = path(r"../../../../llvm")
config.llvm_obj_root = path(r"../../..")
config.llvm_tools_dir = lit_config.substitute(path(r"../../../bin"))
config.llvm_libs_dir = lit_config.substitute(path(r"../../../lib"))
config.llvm_shlib_dir = path(r"../../../lib")
config.llvm_shlib_ext = ".dylib"
config.lit_tools_dir = path(r"")
config.enable_backtrace = 1
config.errc_messages = "No such file or directory;Is a directory;Invalid argument;Permission denied"
config.lld_obj_root = path(r"..")
config.lld_libs_dir = lit_config.substitute(path(r"../../../lib"))
config.lld_tools_dir = lit_config.substitute(path(r"../../../bin"))
config.host_triple = "arm64-apple-darwin23.4.0"
config.target_triple = ""
config.python_executable = "/opt/homebrew/Frameworks/Python.framework/Versions/3.12/bin/python3.12"
config.have_zlib = 1
config.have_zstd = 1
config.have_libxml2 = 1
config.sizeof_void_p = 8
config.ld_lld_default_mingw = 0
config.build_examples = 0
config.has_plugins = 1
config.linked_bye_extension = 0

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(
    config, os.path.join(path(r"../../../../lld"), "test/lit.cfg.py"))
